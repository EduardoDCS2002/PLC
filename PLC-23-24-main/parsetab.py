
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABRIR_CH AND ARRAY BOOL COMMENT DIFF ELSE FALSE FECHAR_CH GEQ GREATER IF IGUAL INT JUMP LEQ LER LESS MARK NOT NUMINT OPAD OPAT OPDIV OPMUL OPSUB OR PAL PCD PCE PRD PRE PRINT PV STRING TRUE VAR VIRGaxioma : programaprograma : declaracoes corpodeclaracoes : declaracoes declaracaodeclaracoes : declaracao : tipo seqDecl PVseqDecl : atr VIRG seqDeclseqDecl : atratr : VARatr : VAR OPAT operacaoatr : VAR PRE NUMINT PRDatr : VAR PRE NUMINT PRD OPAT ABRIR_CH seqNumInt FECHAR_CHatr : VAR PRE NUMINT PRD PRE NUMINT PRDatr : VAR PRE NUMINT PRD PRE NUMINT PRD OPAT ABRIR_CH seqNumInt FECHAR_CHseqNumInt : NUMINTseqNumInt : NUMINT VIRG seqNumIntcorpo : corpo instrucaocorpo : instrucao : ifelsestatementinstrucao : print PVinstrucao : VAR OPAT operacao PVinstrucao : VAR PCE NUMINT PCD OPAT operacao PVinstrucao : VAR PCE NUMINT PCD PCE NUMINT PCD OPAT operacao PV instrucao : tojump PVinstrucao : jumpto PVoperacao : termooperacao : operacao OPAD termooperacao : operacao OPSUB termotermo : fatortermo : termo OPMUL fatortermo : termo OPDIV fatorfator : NUMINTfator : VARfator : VAR PCE NUMINT PCDfator : VAR PCE NUMINT PCD PCE NUMINT PCDfator : boolfator : PALfator : NOT PCE condicao PCDfator : LER PCE PCDifelsestatement : IF PCE condicao PCD ABRIR_CH corpo FECHAR_CH ELSE ABRIR_CH corpo FECHAR_CHcondicao : operacaocondicao : operacao IGUAL operacaocondicao : operacao DIFF operacaocondicao : operacao LESS operacaocondicao : operacao GREATER operacaocondicao : operacao LEQ operacaocondicao : operacao GEQ operacaocondicao : PCE condicao PCD OR PCE condicao PCDcondicao : PCE condicao PCD AND PCE condicao PCDtojump : MARK ABRIR_CH corpo FECHAR_CH IF PCE condicao PCD JUMPjumpto : MARK IF PCE condicao PCD ABRIR_CH corpo FECHAR_CH JUMPprint : PRINT PCE condicao PCDbool : TRUEbool : FALSEtipo : INTtipo : STRINGtipo : BOOLtipo : ARRAY'
    
_lr_action_items = {'INT':([0,3,5,32,],[-4,7,-3,-5,]),'STRING':([0,3,5,32,],[-4,8,-3,-5,]),'BOOL':([0,3,5,32,],[-4,9,-3,-5,]),'ARRAY':([0,3,5,32,],[-4,10,-3,-5,]),'VAR':([0,3,4,5,6,7,8,9,10,11,12,23,24,26,27,28,29,30,32,33,34,48,52,53,58,59,60,61,62,63,68,69,70,71,72,73,86,88,105,106,107,112,113,114,117,122,135,140,141,143,],[-4,-17,14,-3,22,-54,-55,-56,-57,-16,-18,-19,36,-23,-24,36,36,-17,-5,22,36,36,14,36,-20,36,36,36,36,36,36,36,36,36,36,36,36,-17,14,36,-17,-21,36,36,14,36,-17,-22,14,-39,]),'IF':([0,3,4,5,11,12,19,23,26,27,30,32,52,58,75,88,105,107,112,117,135,140,141,143,],[-4,-17,17,-3,-16,-18,31,-19,-23,-24,-17,-5,17,-20,95,-17,17,-17,-21,17,-17,-22,17,-39,]),'PRINT':([0,3,4,5,11,12,23,26,27,30,32,52,58,88,105,107,112,117,135,140,141,143,],[-4,-17,18,-3,-16,-18,-19,-23,-24,-17,-5,18,-20,-17,18,-17,-21,18,-17,-22,18,-39,]),'MARK':([0,3,4,5,11,12,23,26,27,30,32,52,58,88,105,107,112,117,135,140,141,143,],[-4,-17,19,-3,-16,-18,-19,-23,-24,-17,-5,19,-20,-17,19,-17,-21,19,-17,-22,19,-39,]),'$end':([0,1,2,3,4,5,11,12,23,26,27,32,58,112,140,143,],[-4,0,-1,-17,-2,-3,-16,-18,-19,-23,-24,-5,-20,-21,-22,-39,]),'FECHAR_CH':([11,12,23,26,27,30,52,58,88,105,107,112,117,119,120,135,139,140,141,142,143,],[-16,-18,-19,-23,-24,-17,75,-20,-17,115,-17,-21,127,-14,130,-17,-15,-22,143,144,-39,]),'PV':([13,15,16,20,21,22,36,37,38,39,40,41,42,45,46,54,55,74,77,79,80,81,82,84,99,100,102,118,130,131,132,136,137,144,],[23,26,27,32,-7,-8,-32,58,-25,-28,-31,-35,-36,-52,-53,-6,-9,-51,-10,-26,-27,-29,-30,-38,-33,-37,112,-12,-11,-34,140,-49,-50,-13,]),'OPAT':([14,22,65,77,111,118,],[24,34,86,98,122,128,]),'PCE':([14,17,18,28,29,31,36,43,44,48,53,63,65,95,99,103,104,106,113,114,],[25,28,29,48,48,53,57,63,64,48,48,48,85,106,110,113,114,48,48,48,]),'ABRIR_CH':([19,67,96,98,125,128,],[30,88,107,109,135,138,]),'VIRG':([21,22,36,38,39,40,41,42,45,46,55,77,79,80,81,82,84,99,100,118,119,130,131,144,],[33,-8,-32,-25,-28,-31,-35,-36,-52,-53,-9,-10,-26,-27,-29,-30,-38,-33,-37,-12,129,-11,-34,-13,]),'PRE':([22,77,],[35,97,]),'NUMINT':([24,25,28,29,34,35,48,53,57,59,60,61,62,63,68,69,70,71,72,73,85,86,97,106,109,110,113,114,122,129,138,],[40,47,40,40,40,56,40,40,78,40,40,40,40,40,40,40,40,40,40,40,101,40,108,40,119,121,40,40,40,119,119,]),'PAL':([24,28,29,34,48,53,59,60,61,62,63,68,69,70,71,72,73,86,106,113,114,122,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'NOT':([24,28,29,34,48,53,59,60,61,62,63,68,69,70,71,72,73,86,106,113,114,122,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'LER':([24,28,29,34,48,53,59,60,61,62,63,68,69,70,71,72,73,86,106,113,114,122,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'TRUE':([24,28,29,34,48,53,59,60,61,62,63,68,69,70,71,72,73,86,106,113,114,122,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'FALSE':([24,28,29,34,48,53,59,60,61,62,63,68,69,70,71,72,73,86,106,113,114,122,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'OPMUL':([36,38,39,40,41,42,45,46,79,80,81,82,84,99,100,131,],[-32,61,-28,-31,-35,-36,-52,-53,61,61,-29,-30,-38,-33,-37,-34,]),'OPDIV':([36,38,39,40,41,42,45,46,79,80,81,82,84,99,100,131,],[-32,62,-28,-31,-35,-36,-52,-53,62,62,-29,-30,-38,-33,-37,-34,]),'OPAD':([36,37,38,39,40,41,42,45,46,50,55,79,80,81,82,84,89,90,91,92,93,94,99,100,102,131,132,],[-32,59,-25,-28,-31,-35,-36,-52,-53,59,59,-26,-27,-29,-30,-38,59,59,59,59,59,59,-33,-37,59,-34,59,]),'OPSUB':([36,37,38,39,40,41,42,45,46,50,55,79,80,81,82,84,89,90,91,92,93,94,99,100,102,131,132,],[-32,60,-25,-28,-31,-35,-36,-52,-53,60,60,-26,-27,-29,-30,-38,60,60,60,60,60,60,-33,-37,60,-34,60,]),'IGUAL':([36,38,39,40,41,42,45,46,50,79,80,81,82,84,99,100,131,],[-32,-25,-28,-31,-35,-36,-52,-53,68,-26,-27,-29,-30,-38,-33,-37,-34,]),'DIFF':([36,38,39,40,41,42,45,46,50,79,80,81,82,84,99,100,131,],[-32,-25,-28,-31,-35,-36,-52,-53,69,-26,-27,-29,-30,-38,-33,-37,-34,]),'LESS':([36,38,39,40,41,42,45,46,50,79,80,81,82,84,99,100,131,],[-32,-25,-28,-31,-35,-36,-52,-53,70,-26,-27,-29,-30,-38,-33,-37,-34,]),'GREATER':([36,38,39,40,41,42,45,46,50,79,80,81,82,84,99,100,131,],[-32,-25,-28,-31,-35,-36,-52,-53,71,-26,-27,-29,-30,-38,-33,-37,-34,]),'LEQ':([36,38,39,40,41,42,45,46,50,79,80,81,82,84,99,100,131,],[-32,-25,-28,-31,-35,-36,-52,-53,72,-26,-27,-29,-30,-38,-33,-37,-34,]),'GEQ':([36,38,39,40,41,42,45,46,50,79,80,81,82,84,99,100,131,],[-32,-25,-28,-31,-35,-36,-52,-53,73,-26,-27,-29,-30,-38,-33,-37,-34,]),'PCD':([36,38,39,40,41,42,45,46,47,49,50,51,64,66,76,78,79,80,81,82,83,84,89,90,91,92,93,94,99,100,101,116,121,123,124,131,133,134,],[-32,-25,-28,-31,-35,-36,-52,-53,65,67,-40,74,84,87,96,99,-26,-27,-29,-30,100,-38,-41,-42,-43,-44,-45,-46,-33,-37,111,126,131,133,134,-34,-47,-48,]),'PRD':([56,108,],[77,118,]),'OR':([87,],[103,]),'AND':([87,],[104,]),'ELSE':([115,],[125,]),'JUMP':([126,127,],[136,137,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'axioma':([0,],[1,]),'programa':([0,],[2,]),'declaracoes':([0,],[3,]),'corpo':([3,30,88,107,135,],[4,52,105,117,141,]),'declaracao':([3,],[5,]),'tipo':([3,],[6,]),'instrucao':([4,52,105,117,141,],[11,11,11,11,11,]),'ifelsestatement':([4,52,105,117,141,],[12,12,12,12,12,]),'print':([4,52,105,117,141,],[13,13,13,13,13,]),'tojump':([4,52,105,117,141,],[15,15,15,15,15,]),'jumpto':([4,52,105,117,141,],[16,16,16,16,16,]),'seqDecl':([6,33,],[20,54,]),'atr':([6,33,],[21,21,]),'operacao':([24,28,29,34,48,53,63,68,69,70,71,72,73,86,106,113,114,122,],[37,50,50,55,50,50,50,89,90,91,92,93,94,102,50,50,50,132,]),'termo':([24,28,29,34,48,53,59,60,63,68,69,70,71,72,73,86,106,113,114,122,],[38,38,38,38,38,38,79,80,38,38,38,38,38,38,38,38,38,38,38,38,]),'fator':([24,28,29,34,48,53,59,60,61,62,63,68,69,70,71,72,73,86,106,113,114,122,],[39,39,39,39,39,39,39,39,81,82,39,39,39,39,39,39,39,39,39,39,39,39,]),'bool':([24,28,29,34,48,53,59,60,61,62,63,68,69,70,71,72,73,86,106,113,114,122,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'condicao':([28,29,48,53,63,106,113,114,],[49,51,66,76,83,116,123,124,]),'seqNumInt':([109,129,138,],[120,139,142,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> axioma","S'",1,None,None,None),
  ('axioma -> programa','axioma',1,'p_axioma','parserGerador.py',25),
  ('programa -> declaracoes corpo','programa',2,'p_programa','parserGerador.py',35),
  ('declaracoes -> declaracoes declaracao','declaracoes',2,'p_declaracoes_declaracoesDeclaracao','parserGerador.py',41),
  ('declaracoes -> <empty>','declaracoes',0,'p_declaracoes_empty','parserGerador.py',46),
  ('declaracao -> tipo seqDecl PV','declaracao',3,'p_declaracao_seqDecl','parserGerador.py',52),
  ('seqDecl -> atr VIRG seqDecl','seqDecl',3,'p_seqDecl_atrVIRGseqDecl','parserGerador.py',60),
  ('seqDecl -> atr','seqDecl',1,'p_seqDecl_atr','parserGerador.py',65),
  ('atr -> VAR','atr',1,'p_atr_VAR','parserGerador.py',72),
  ('atr -> VAR OPAT operacao','atr',3,'p_atr_VAROPAToperacao','parserGerador.py',97),
  ('atr -> VAR PRE NUMINT PRD','atr',4,'p_atr_VARARRAY','parserGerador.py',117),
  ('atr -> VAR PRE NUMINT PRD OPAT ABRIR_CH seqNumInt FECHAR_CH','atr',8,'p_atr_VARARRAYcomConteudo','parserGerador.py',132),
  ('atr -> VAR PRE NUMINT PRD PRE NUMINT PRD','atr',7,'p_atr_matrizDefault','parserGerador.py',148),
  ('atr -> VAR PRE NUMINT PRD PRE NUMINT PRD OPAT ABRIR_CH seqNumInt FECHAR_CH','atr',11,'p_atr_matrizComConteudo','parserGerador.py',164),
  ('seqNumInt -> NUMINT','seqNumInt',1,'p_seqNumInt_NUMINT','parserGerador.py',183),
  ('seqNumInt -> NUMINT VIRG seqNumInt','seqNumInt',3,'p_seqNumInt_NumMaisNum','parserGerador.py',187),
  ('corpo -> corpo instrucao','corpo',2,'p_corpo_instrucao','parserGerador.py',195),
  ('corpo -> <empty>','corpo',0,'p_corpo_VAZIO','parserGerador.py',205),
  ('instrucao -> ifelsestatement','instrucao',1,'p_instrucao_ifelsestatement','parserGerador.py',212),
  ('instrucao -> print PV','instrucao',2,'p_instrucao_print','parserGerador.py',216),
  ('instrucao -> VAR OPAT operacao PV','instrucao',4,'p_instrucao_VARopatOPERACAO','parserGerador.py',220),
  ('instrucao -> VAR PCE NUMINT PCD OPAT operacao PV','instrucao',7,'p_instrucao_mudarindexarray','parserGerador.py',230),
  ('instrucao -> VAR PCE NUMINT PCD PCE NUMINT PCD OPAT operacao PV','instrucao',10,'p_instrucao_mudarindexMatriz','parserGerador.py',241),
  ('instrucao -> tojump PV','instrucao',2,'p_instrucao_tojumpPV','parserGerador.py',256),
  ('instrucao -> jumpto PV','instrucao',2,'p_instrucao_jumptoPV','parserGerador.py',260),
  ('operacao -> termo','operacao',1,'p_operacao_termo','parserGerador.py',267),
  ('operacao -> operacao OPAD termo','operacao',3,'p_operacao_adicao','parserGerador.py',271),
  ('operacao -> operacao OPSUB termo','operacao',3,'p_operacao_subtracao','parserGerador.py',275),
  ('termo -> fator','termo',1,'p_termo_fator','parserGerador.py',282),
  ('termo -> termo OPMUL fator','termo',3,'p_termo_mult','parserGerador.py',286),
  ('termo -> termo OPDIV fator','termo',3,'p_termo_DIV','parserGerador.py',290),
  ('fator -> NUMINT','fator',1,'p_fator_NUMINT','parserGerador.py',297),
  ('fator -> VAR','fator',1,'p_fator_VAR','parserGerador.py',301),
  ('fator -> VAR PCE NUMINT PCD','fator',4,'p_fator_VARARRAY','parserGerador.py',333),
  ('fator -> VAR PCE NUMINT PCD PCE NUMINT PCD','fator',7,'p_fator_VARMATRIZ','parserGerador.py',337),
  ('fator -> bool','fator',1,'p_fator_bool','parserGerador.py',342),
  ('fator -> PAL','fator',1,'p_fator_PAL','parserGerador.py',346),
  ('fator -> NOT PCE condicao PCD','fator',4,'p_fator_NOTcondicao','parserGerador.py',350),
  ('fator -> LER PCE PCD','fator',3,'p_fator_lerInput','parserGerador.py',354),
  ('ifelsestatement -> IF PCE condicao PCD ABRIR_CH corpo FECHAR_CH ELSE ABRIR_CH corpo FECHAR_CH','ifelsestatement',11,'p_ifselsetatement','parserGerador.py',361),
  ('condicao -> operacao','condicao',1,'p_condicao_operacao','parserGerador.py',369),
  ('condicao -> operacao IGUAL operacao','condicao',3,'p_condicao_igualigual','parserGerador.py',373),
  ('condicao -> operacao DIFF operacao','condicao',3,'p_condicao_DIFF','parserGerador.py',377),
  ('condicao -> operacao LESS operacao','condicao',3,'p_condicao_MENOR','parserGerador.py',381),
  ('condicao -> operacao GREATER operacao','condicao',3,'p_condicao_MAIOR','parserGerador.py',385),
  ('condicao -> operacao LEQ operacao','condicao',3,'p_condicao_MENORouIGUAL','parserGerador.py',389),
  ('condicao -> operacao GEQ operacao','condicao',3,'p_condicao_MAIORouIGUAL','parserGerador.py',393),
  ('condicao -> PCE condicao PCD OR PCE condicao PCD','condicao',7,'p_condicao_OU','parserGerador.py',397),
  ('condicao -> PCE condicao PCD AND PCE condicao PCD','condicao',7,'p_condicao_AND','parserGerador.py',401),
  ('tojump -> MARK ABRIR_CH corpo FECHAR_CH IF PCE condicao PCD JUMP','tojump',9,'p_tojump_MARKABRIRCHcorpoFECHARCHif','parserGerador.py',409),
  ('jumpto -> MARK IF PCE condicao PCD ABRIR_CH corpo FECHAR_CH JUMP','jumpto',9,'p_jumpto_MARKifCondcorpoJump','parserGerador.py',419),
  ('print -> PRINT PCE condicao PCD','print',4,'p_print','parserGerador.py',427),
  ('bool -> TRUE','bool',1,'p_bool_TRUE','parserGerador.py',437),
  ('bool -> FALSE','bool',1,'p_bool_FALSE','parserGerador.py',441),
  ('tipo -> INT','tipo',1,'p_tipo_INT','parserGerador.py',448),
  ('tipo -> STRING','tipo',1,'p_tipo_STRING','parserGerador.py',453),
  ('tipo -> BOOL','tipo',1,'p_tipo_BOOL','parserGerador.py',458),
  ('tipo -> ARRAY','tipo',1,'p_tipo_ARRAY','parserGerador.py',463),
]
